@page "/static-model-form"

@using VxFormGenerator.Core
@using VxFormGenerator.Core.Layout
@using VxFormGeneratorDemoData
@using System.Text.Json;
@using System.Runtime.CompilerServices


<h1>Static model demo with two not-related models</h1>

<div class="card">
    <div class="card-header">
        Generated by Static model form FeedingSession
    </div>

    <div class="card-body">
        <EditForm Model="ModelOne"
                  OnValidSubmit="FormOneHandleValidSubmit"
                  OnInvalidSubmit="FormOneHandleInValidSubmit">
            <VxFormGenerator.Core.Validation.ObjectGraphDataAnnotationsValidator/>

            <RenderFormElements FormLayoutOptions="@LayoutOptions"></RenderFormElements>

            <button class="btn btn-primary" type="submit">Submit</button>
            <button class="btn btn-primary" type="button" id="FormOneJson" @onclick="FormOneJson">Serialize to Json</button>
        </EditForm>
    </div>
</div>

<div class="card">

    <div class="card-header">
        Generated by Static model from Address
    </div>
    <div class="card-body">
        <EditForm Model="ModelTwo"
                  OnValidSubmit="FormTwoHandleValidSubmit"
                  OnInvalidSubmit="FormTwoHandleInValidSubmit">
            <VxFormGenerator.Core.Validation.ObjectGraphDataAnnotationsValidator/>

            <RenderFormElements FormLayoutOptions="@LayoutOptions"></RenderFormElements>

            <button class="btn btn-primary" type="submit">Submit</button>
            <button class="btn btn-primary" type="button" id="FormTwoJson" @onclick="FormTwoJson">Serialize Json</button>
        </EditForm>

    </div>
</div>

<div class="alert alert-info">
    @SerializedModelView
</div>

<br/>

@code{

    /// <summary>
    /// Model that is used for the form
    /// </summary>
    private string SerializedModelView = "";
    private object ModelOne = new FeedingSession();

    private object ModelTwo = new AddressViewModel();
    private VxFormLayoutOptions LayoutOptions = new VxFormLayoutOptions { LabelOrientation = LabelOrientation.LEFT };


    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    /// <summary>
    /// Will handle the submit action of the form
    /// </summary>
    /// <param name="context">The model with values as entered in the form</param>
    private void FormOneHandleValidSubmit(EditContext context)
    {
        // save your changes
    }
    
    private void FormTwoHandleValidSubmit(EditContext context)
    {
        // save your changes
    }

    private void FormTwoHandleInValidSubmit(EditContext context)
    {
    }
    
    private void FormOneHandleInValidSubmit(EditContext context)
    {
    }
    
    
    
    private void FormOneJson()
    {
        SerializedModelView = JsonSerializer.Serialize(ModelOne);
    }

    private void FormTwoJson()
    {
        SerializedModelView = JsonSerializer.Serialize(ModelTwo);
    }

}